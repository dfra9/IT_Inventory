
@model IT_Inventory.ViewModel.DataUserViewModel

@{

    var mode = ViewBag.Mode ?? "Create";
    ViewBag.Title = @mode + " - User Data";
    var userId = Request.QueryString["id"] ?? "0";
    var db = new IT_Inventory.Models.DBInventory();
 
}


<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<style>

    .select2-dropdown {
        z-index: 9999;
    }


    .select2-search__field {
        width: 100% !important;
        padding: 6px !important;
    }


    .select2-container--default .select2-selection--single {
        height: calc(2.25rem + 2px);
        padding: .375rem .75rem;
    }
</style>

<section class="content">
    @using (Html.BeginForm("Editor", "DataUser", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="mode" value="@mode" />
        <input type="hidden" name="User_Id" value="@Model.User_Id" />


        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="row justify-content-center">
                        <div class="col-md-8">
                            <div class="form-group row">
                                <div class="card-body">
                                    <div class="form-group row">
                                        <label for="Username" class="col-sm-3 col-form-label form-control-label">Username</label>
                                        <div class="col-sm-5">
                                            @if (mode == "View" || mode == "Delete")
                                            {
                                                <input type="text" id="Username" name="Username" class="form-control" value="@Model.Username" readonly>
                                            }
                                            else
                                            {
                                                <input type="text" id="Username" name="Username" class="form-control" value="@Model.Username">
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="Long_Name" class="col-sm-3 col-form-label form-control-label">Long Name</label>
                                        <div class="col-sm-5">
                                            @if (mode == "View" || mode == "Delete")
                                            {
                                                <input type="text" id="Long_Name" name="Long_Name" class="form-control" value="@Model.Long_Name" readonly>
                                            }
                                            else
                                            {
                                                <input type="text" id="Long_Name" name="Long_Name" class="form-control" value="@Model.Long_Name">
                                            }
                                        </div>
                                    </div>

                                    @if (Session["IsAdmin"] is bool IsAdmin && IsAdmin)
                                    {
                                        <div class="form-group row">
                                            <label for="IsAdmin" class="col-sm-3 col-form-label form-control-label">User Is Admin?</label>
                                            <div class="col-sm-5">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="Is_Admin" name="Is_Admin" value="True" @(Model.IsAdmin == true ? "checked" : "") />
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <div class="form-group row">
                                        <label for="Password" class="col-sm-3 col-form-label form-control-label">Password</label>
                                        <div class="col-sm-5">
                                            <div class="input-group">
                                                <input type="password" id="Password" name="Password" class="form-control" placeholder="@(mode == "Edit" ? "Change Password" : "Enter password")"
                                                       @(mode == "Edit" ? "" : "required")>
                                                @if (mode == "Edit")
                                                {
                                                    <div class="input-group-append">
                                                        <div class="input-group-text">
                                                            <input type="checkbox" id="ChangePassword" name="ChangePassword" />
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label for="Departement" class="col-sm-3 col-form-label">Department</label>
                                        <div class="col-sm-5">
                                            @if (mode == "View" || mode == "Delete")
                                            {
                                                <input type="text" id="Departement" name="Departement" class="form-control" value="@Model.Departement" readonly />
                                            }
                                            else
                                            {
                                                <select id="Departement" name="Departement" class="form-control select2">
                                                    <option value="">Select Department</option>
                                                    @if (ViewBag.Departement != null)
                                                    {
                                                        foreach (var dept in ViewBag.Departement)
                                                        {
                                                            <option value="@dept.Departement_Code" @(Model.Departement == dept.Departement_Code ? "selected" : "")>@dept.Departement_Code</option>
                                                        }
                                                    }
                                                </select>
                                            }
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label for="City" class="col-sm-3 col-form-label">City</label>
                                        <div class="col-sm-5">
                                            @if (mode == "View" || mode == "Delete")
                                            {
                                                <input type="text" id="City" name="City" class="form-control" value="@Model.City" readonly />
                                            }
                                            else
                                            {
                                                <select id="City" name="City" class="form-control select2">
                                                    <option value="">Select City</option>
                                                    @if (ViewBag.City != null)
                                                    {
                                                        foreach (var city in ViewBag.City)
                                                        {
                                                            <option value="@city.City_Name" @(Model.City == city.City_Name ? "selected" : "")>@city.City_Name</option>
                                                        }
                                                    }
                                                </select>
                                            }
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label for="Location" class="col-sm-3 col-form-label">Location</label>
                                        <div class="col-sm-5">
                                            @if (mode == "View" || mode == "Delete")
                                            {
                                                <input type="text" id="Location" name="Location" class="form-control" value="@Model.Location" readonly />
                                            }
                                            else
                                            {
                                                <select id="Location" name="Location" class="form-control select2">
                                                    <option value="">Select Location</option>
                                                    @if (mode == "Edit" && !string.IsNullOrEmpty(Model.Location))
                                                    {
                                                        <option value="@Model.Location" selected>@Model.Location</option>
                                                    }
                                                </select>
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 mb-4">
                <div class="button-container">
                    <div style="display: flex; justify-content: flex-start; gap:10px; margin-top: 15px;">
                        <div>
                            <a href="@Url.Action("Index", "DataUser")" class="btn btn-secondary">Cancel</a>
                        </div>


                        @if (mode == "Create")
                        {
                            <input type="submit" value="Create new User" class="btn btn-success ">
                        }
                        else if (mode == "Edit")
                        {
                            <input type="submit" value="Update User" class="btn btn-success ">
                        }
                        else if (mode == "Delete")
                        {
                            <input type="submit" value="Delete User" class="btn btn-danger">

                        }
                    </div>
                </div>
            </div>
        </div>

    }
</section>


<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script>
    $(document).ready(function () {
        $('.select2').select2({
            placeholder: "Select an option",
            allowClear: true,
            width: '100%',
            dropdownParent: $('body')
        });
        var mode = $('input[name="mode"]').val();


        if (mode == "Edit") {
            $("#Password").prop("readonly", true);
            $("#Password").prop("disabled", false);
            $("#ChangePassword").prop("checked", false);
        }
        else if (mode == "Create") {
            $("#Password").prop("readonly", false);
            $("#Password").prop("disabled", false);
            $("#ChangePassword").hide();
            $(".input-group-append").hide();
        }
        else if (mode == "Delete" || mode == "View") {
            $("input:not([type='submit']), select").prop("readonly", true);
            $("select").attr("disabled", "disabled");
            $("#Is_Admin").prop("disabled", true);
        }

        if (mode == "Delete") {
            $("#Password").removeAttr("required");
        }

        if (@Html.Raw(Model.IsAdmin == true ? "true" : "false")) {
            $("#Is_Admin").prop("checked", true);
        } else {
            $("#Is_Admin").prop("checked", false);
        }

        $("#Is_Admin").change(function () {
            if ($(this).is(":checked")) {
                $("#Is_Admin").val("true");
            }
            else {
                $("#Is_Admin").val("false");
            }
        });

        $("#ChangePassword").change(function () {
            if ($(this).is(":checked")) {
                $("#Password").prop("readonly", false);
                $("#Password").prop("disabled", false);
                $("#Password").focus();
            }
            else {
                $("#Password").prop("readonly", true);
                $("#Password").prop("disabled", true);
                $("#Password").val("");
            }
        });

        $("#ShowPassword").change(function () {
            if ($(this).is(":checked")) {
                $("#Password").attr("type", "text");
            }
            else {
                $("#Password").attr("type", "password");
            }
        });

        $('#City').on('change', function () {
            var cityValue = $(this).val();
            console.log("City changed to:", cityValue);

            if (cityValue) {
                updateLocationDropdown(cityValue);
            } else {
                resetLocationDropdown();
            }
        });

        function resetLocationDropdown() {
            $('#Location').empty().append('<option value="">Select Location</option>');
            $('#Location').trigger('change.select2');
        }

        function updateLocationDropdown(cityName) {
            if (!cityName) return;

           var currentLocation = '@Model.Location';
            console.log("Fetching locations for city:", cityName);
            $('#Location').empty().append('<option value="">Select Location</option>');

            $.ajax({
                url: '/DataUser/GetLocationByCity',
                type: 'GET',
                data: { cityId: cityName },
                dataType: 'json',
                success: function (locations) {
                    console.log("Received locations:", locations);

                    if (locations && locations.length > 0) {
                        $.each(locations, function (i, location) {
                            var isSelected = (location.locationName === currentLocation);
                            $('#Location').append($('<option>', {
                                value: location.locationName,
                                text: location.locationName,
                                selected: isSelected
                            }));
                            if (isSelected) {
                                console.log("Found matching location:", location.locationName);
                            }
                        });

                        console.log("Locations loaded successfully");
                    } else {
                        console.log('No locations found for the selected city');
                        if (mode === "Edit" && currentLocation) {
                            $('#Location').append($('<option>', {
                                value: currentLocation,
                                text: currentLocation + " (Current)",
                                selected: true
                            }));
                            console.log("Added current location as fallback:", currentLocation);
                        }
                    }

                    $('#Location').trigger('change');
                    $('#Location').trigger('change.select2');
                },
                error: function (xhr, status, error) {
                    console.error('Failed to load locations:', error);
                    console.log('Status:', status);
                    console.log('Response:', xhr.responseText);
                    if (mode === "Edit" && currentLocation) {
                        $('#Location').append($('<option>', {
                            value: currentLocation,
                            text: currentLocation + " (Current)",
                            selected: true
                        }));
                        $('#Location').trigger('change.select2');
                    }
                }
            });
        }



        $("form").submit(function (e) {
            $("input[name='Is_Admin_Hidden']").remove();
            var isAdmin = $("#Is_Admin").is(":checked");
            $("form").append('<input type="hidden" name="Is_Admin_Hidden" value="' + isAdmin + '">');

            if (mode == "Delete") {
                if (!confirm("Are you sure you want to delete this user?")) {
                    e.preventDefault();
                    return false;
                }
            }

            if (mode == "Edit" && $("#ChangePassword").is(":checked") && $("#Password").val() == "") {
                alert("Password must be filled");
                e.preventDefault();
                return false;
            }

            if (mode == "Create") {
                var requiredFields = [];
                var missingFields = [];

                if (mode == "Create") {

                    if (!$("#Username").val() || $("#Username").val().trim() === "") {
                        requiredFields.push("Username");
                    }
                }


                if (!$("#Password").val() || $("#Password").val().trim() === "") {
                    requiredFields.push("Password");
                }
                if (!$("#Departement").val() || $("#Departement").val().trim() === "") {
                    requiredFields.push("Departement");
                }
                if (!$("#City").val() || $("#City").val().trim() === "") {
                    requiredFields.push("City");
                }
                if (!$("#Location").val() || $("#Location").val().trim() === "") {
                    requiredFields.push("Location");
                }

                if (requiredFields.length > 0) {
                    alert("Please fill all required fields: " + requiredFields.join(", "));
                    e.preventDefault();
                    return false;
                }
            }
        });

        if (mode == "Edit" && $('#City').val()) {
            console.log("Initial city value:", $('#City').val());
            setTimeout(function () {
                updateLocationDropdown($('#City').val());
            }, 300);
        }
    });
</script>