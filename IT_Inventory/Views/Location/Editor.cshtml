@model global::IT_Inventory.ViewModel.LocationViewModel
@{
    var mode = ViewBag.Mode ?? "Create";
    ViewBag.Title = @mode + " - Location";
}

    <!-- Main content -->
    <section class="content">
        @using (Html.BeginForm("Editor", "Location", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Is_Deleted)
            <input type="hidden" name="mode" value="@mode"/>


            <div class="row">
                <div class="col-md-12">
                    <div class="card card-primary">
                        <div class="row justify-content-center">
                            <div class="col-md-8">
                                <div class="form-group row">
                                    <div class="card-body">
                                        <div class="form-group row">
                                            <label for="Location_Code" class="col-sm-2 col-form-label form-control-label">Location Code</label>
                                            <div class="col-sm-3">

                                                @if (mode == "Create")
                                                {
                                                    @Html.TextBoxFor(model => model.Location_Code, new { @class = "form-control", @placeholder = "Location Code", required = "required" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.Location_Code, new { @class = "form-control", @placeholder = "Location Code", required = "required", @readonly = "readonly" })

                                                }@Html.ValidationMessageFor(model => model.Location_Code, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.City_Name, new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @if (mode == "View" || mode == "Delete")
                                                {
                                                    @Html.TextBoxFor(model => model.City_Name, new { @class = "form-control", @readonly = "readonly" })
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(model => model.City_Name, Model.Cities, "-- Select City --", new { @class = "form-control", required = "required" })
                                                }
                                                
                                                @Html.ValidationMessageFor(model => model.City_Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group row">
                                            <label for="Location_Name" class="col-sm-2 col-form-label form-control-label">Location Name</label>
                                            <div class="col-sm-3">
                                                @if (mode == "View" || mode == "Delete")
                                                {

                                                    @Html.TextBoxFor(model => model.Location_Name, new { @class = "form-control", @placeholder = "Location Name", required = "required", @readonly = "readonly" })

                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.Location_Name, new { @class = "form-control", @placeholder = "Location Name", required = "required" })

                                                }
                                                @Html.ValidationMessageFor(model => model.Location_Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="Location_Description" class="col-sm-2 col-form-label form-control-label">Location Description</label>
                                            <div class="col-sm-7">
                                                @if (mode == "View" || mode == "Delete")
                                                {

                                                    @Html.TextBoxFor(model => model.Location_Description, new { @class = "form-control", @placeholder = "Location Description", required = "required", @readonly = "readonly" })

                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.Location_Description, new { @class = "form-control", @placeholder = "Location Description" })

                                                }
                                                @Html.ValidationMessageFor(model => model.Location_Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <div class="row">
                <div class="col-12 mb-4">
                    <div class="button-container">
                        <div style="display: flex; justify-content: flex-start; gap:10px; margin-top: 15px;">
                            <div>
                                <a href="@Url.Action("Index", "Location")" class="btn btn-secondary">Cancel</a>
                            </div>


                            @if (mode == "Create")
                            {
                                <input type="submit" value="Create" class="btn btn-success">
                            }
                            else if (mode == "Edit")
                            {
                                <input type="submit" value="Save" class="btn btn-success">
                            }
                            else if (mode == "Delete")
                            {
                                <input type="submit" value="Delete" class="btn btn-danger">

                            }
                        </div>
                    </div>
                </div>
            </div>

        }
    </section>

    <script>
    $(document).ready(function () {

        $("#City_Name").change(function () {
            var selectedCity = $(this).val();

            $.ajax({
                url: '@Url.Action("GetLocationByCity", "Location")',
                type: 'GET',
                data: { cityName: selectedCity },
                success: function (locations) {
                    console.log("Location for", selectedCity, ":",locations);
                },
                error: function (error) {
                    console.error("Error fetching city details:", error);
                }
            });


            $("form").submit(function (e) {
                var locationCode = $("#Location_Code").val();
                var locationName = $("#Location_Name").val();
                
                var cityName = $("#City_Name").val();
                var mode = $("input[name='mode']").val();

                console.log("Location Code: " + locationCode);
                console.log("Location Name: " + locationName);
                console.log("Location Description: " + locationDesc);

                if (!locationCode || !locationName || !cityName  ) {
                    alert("Please fill all required field");
                    e.preventDefault();
                    return false;
                }

                if (mode == "Delete") {
                    if (!confirm("Are you sure want to delete this Company?")) {
                        e.preventDefault();
                        return false;
                    }
                }
            });

    if ('@TempData["SuccessMessage"]' != '') {
    toastr.success('@TempData["SuccessMessage"]');
    }
    if ('@TempData["ErrorMessage"]' != '') {
    toastr.error('@TempData["ErrorMessage"]');
    }
    });
    </script>
